{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport { changeDescription } from '../action/changeDescription';\nimport { changeTitle } from '../action/changeTitle';\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n  render() {\n    const _this$props = this.props,\n          addTodo = _this$props.addTodo,\n          title = _this$props.title,\n          description = _this$props.description,\n          changeTitle = _this$props.changeTitle,\n          changeDescription = _this$props.changeDescription; // console.log(title);\n    // console.log(description);\n\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        console.log(title);\n        console.log(description);\n        addTodo();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Title:\"), React.createElement(\"input\", {\n      className: \"Form-input\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      id: \"todoTitle\",\n      value: title,\n      onChange: e => changeTitle(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"textarea\", {\n      className: \"Form-input\",\n      name: \"description\",\n      id: \"todoDescription\",\n      placeholder: \"Description\",\n      cols: \"30\",\n      rows: \"10\",\n      value: description,\n      onChange: e => changeDescription(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(ButtonForm, {\n      type: \"submit\",\n      name: \"ADD TODO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nForm.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = store => {\n  return {\n    title: store.todoItems.title,\n    description: store.todoItems.description\n  };\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n  changeDescription,\n  changeTitle\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js"],"names":["React","Component","PropTypes","connect","addTodo","changeDescription","changeTitle","ButtonForm","Form","render","props","title","description","e","preventDefault","console","log","target","value","propTypes","func","isRequired","mapStateToProps","store","todoItems","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {PropTypes} from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addTodo} from '../action/addTodo';\nimport {changeDescription} from '../action/changeDescription';\nimport {changeTitle} from '../action/changeTitle';\n\n\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n\n    static propTypes = {\n        addTodo: PropTypes.func.isRequired\n    };\n\n    render() {\n        const {addTodo, title, description, changeTitle, changeDescription} = this.props;\n        // console.log(title);\n        // console.log(description);\n\n        return (\n            <div className='Form'>\n                <form\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        console.log(title);\n                        console.log(description);\n                        addTodo();\n                    }}\n                >\n                    <div className='Form-group'>\n                        <label\n                            className='Form-label'\n                            htmlFor='todoTitle'\n                        >Title:</label>\n                        <input\n                            className='Form-input'\n                            type='text'\n                            name='title'\n                            placeholder='Title'\n                            id='todoTitle'\n                            value={title}\n                            onChange={(e) => changeTitle(e.target.value)}\n                        />\n                    </div>\n                    <div className='Form-group'>\n                        <label\n                            className='Form-label'\n                            htmlFor='todoDescription'\n                        >Description:</label>\n                        <textarea\n                            className='Form-input'\n                            name='description'\n                            id='todoDescription'\n                            placeholder='Description'\n                            cols='30'\n                            rows='10'\n                            value={description}\n                            onChange={(e) => changeDescription(e.target.value)}\n                        />\n                    </div>\n                    <ButtonForm type='submit' name='ADD TODO'/>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        title: store.todoItems.title,\n        description: store.todoItems.description\n    }\n};\n\nconst mapDispatchToProps = {\n    addTodo,\n    changeDescription,\n    changeTitle\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}