{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/container/TodoList.js\";\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteTodo } from '../action/deleteTodo';\nimport TodoListItem from '../components/TodoListItem';\nimport '../style/TodoList.style.scss';\n\nconst TodoList = ({\n  todoList,\n  deleteTodo,\n  searchingTodo\n}) => {\n  const itemsTodoList = todoList.map(item => React.createElement(TodoListItem, Object.assign({\n    key: item.id\n  }, item, {\n    removeTodo: () => deleteTodo(todoList, item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })));\n  const searchingTodoItems = searchingTodo.map(item => React.createElement(TodoListItem, Object.assign({\n    key: item.id\n  }, item, {\n    removeTodo: () => deleteTodo(todoList, item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n  return React.createElement(\"ul\", {\n    className: \"TodoList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, searchingTodoItems.length ? searchingTodoItems : itemsTodoList);\n};\n\nTodoList.propTypes = {\n  todoList: PropTypes.array.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  searchingTodo: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = store => ({\n  todoList: store.todoItems.todoList,\n  searchingTodo: store.todoItems.searchingTodo\n});\n\nconst mapDispatchToProps = {\n  deleteTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/container/TodoList.js"],"names":["React","PropTypes","connect","deleteTodo","TodoListItem","TodoList","todoList","searchingTodo","itemsTodoList","map","item","id","searchingTodoItems","length","propTypes","array","isRequired","func","mapStateToProps","store","todoItems","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,8BAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYH,EAAAA,UAAZ;AAAwBI,EAAAA;AAAxB,CAAD,KAA6C;AAC7D,QAAMC,aAAa,GAAGF,QAAQ,CAACG,GAAT,CAAaC,IAAI,IACtC,oBAAC,YAAD;AACC,IAAA,GAAG,EAAEA,IAAI,CAACC;AADX,KAEKD,IAFL;AAGC,IAAA,UAAU,EAAE,MAAMP,UAAU,CAACG,QAAD,EAAWI,IAAI,CAACC,EAAhB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADqB,CAAtB;AAOA,QAAMC,kBAAkB,GAAGL,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAChD,oBAAC,YAAD;AACC,IAAA,GAAG,EAAEA,IAAI,CAACC;AADX,KAEKD,IAFL;AAGC,IAAA,UAAU,EAAE,MAAMP,UAAU,CAACG,QAAD,EAAWI,IAAI,CAACC,EAAhB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0B,CAA3B;AAOA,SACC;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,kBAAkB,CAACC,MAAnB,GAA4BD,kBAA5B,GAAiDJ,aADnD,CADD;AAKA,CApBD;;AAsBAH,QAAQ,CAACS,SAAT,GAAqB;AACpBR,EAAAA,QAAQ,EAAEL,SAAS,CAACc,KAAV,CAAgBC,UADN;AAEpBb,EAAAA,UAAU,EAAEF,SAAS,CAACgB,IAAV,CAAeD,UAFP;AAGpBT,EAAAA,aAAa,EAAEN,SAAS,CAACc,KAAV,CAAgBC;AAHX,CAArB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AACnCb,EAAAA,QAAQ,EAAEa,KAAK,CAACC,SAAN,CAAgBd,QADS;AAEnCC,EAAAA,aAAa,EAAEY,KAAK,CAACC,SAAN,CAAgBb;AAFI,CAAZ,CAAxB;;AAKA,MAAMc,kBAAkB,GAAG;AAC1BlB,EAAAA;AAD0B,CAA3B;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteTodo } from '../action/deleteTodo';\n\nimport TodoListItem from '../components/TodoListItem';\nimport '../style/TodoList.style.scss';\n\nconst TodoList = ({ todoList, deleteTodo, searchingTodo }) => {\n\tconst itemsTodoList = todoList.map(item =>\n\t\t<TodoListItem\n\t\t\tkey={item.id}\n\t\t\t{...item}\n\t\t\tremoveTodo={() => deleteTodo(todoList, item.id)}\n\t\t/>);\n\n\tconst searchingTodoItems = searchingTodo.map(item =>\n\t\t<TodoListItem\n\t\t\tkey={item.id}\n\t\t\t{...item}\n\t\t\tremoveTodo={() => deleteTodo(todoList, item.id)}\n\t\t/>);\n\n\treturn (\n\t\t<ul className='TodoList'>\n\t\t\t{searchingTodoItems.length ? searchingTodoItems : itemsTodoList}\n\t\t</ul>\n\t);\n};\n\nTodoList.propTypes = {\n\ttodoList: PropTypes.array.isRequired,\n\tdeleteTodo: PropTypes.func.isRequired,\n\tsearchingTodo: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n\ttodoList: store.todoItems.todoList,\n\tsearchingTodo: store.todoItems.searchingTodo,\n});\n\nconst mapDispatchToProps = {\n\tdeleteTodo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}