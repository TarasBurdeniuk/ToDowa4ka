{"ast":null,"code":"import _objectSpread from \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TODO } from '../action/addTodo';\nimport { DELETE_TODO } from '../action/deleteTodo';\nimport { CHANGE_DESCRIPTION } from '../action/changeDescription';\nimport { CHANGE_TITLE } from '../action/changeTitle';\nimport { SEARCH_TODO } from '../action/searchTodo';\nimport { load } from 'redux-localstorage-simple';\nimport { fromJS } from 'immutable';\nlet TASKS = load({\n  namespace: 'todo-list'\n});\n\nif (!TASKS || !TASKS.todoItems.todoList.length) {\n  TASKS = {\n    todoItems: {\n      title: '',\n      description: '',\n      todoList: [],\n      searchingTodo: []\n    }\n  };\n} // if (!TASKS || !TASKS.todoItems.todoList.length) {\n// \tTASKS = fromJS({\n// \t\ttodoItems: {\n// \t\t\ttitle: '',\n// \t\t\tdescription: '',\n// \t\t\ttodoList: [],\n// \t\t\tsearchingTodo: [],\n// \t\t},\n// \t});\n// }\n\n\nconst todoItems = (state = TASKS.todoItems, action) => {\n  switch (action.type) {\n    case CHANGE_TITLE:\n      return _objectSpread({}, state, {\n        title: action.payload\n      });\n\n    case CHANGE_DESCRIPTION:\n      return _objectSpread({}, state, {\n        description: action.payload\n      });\n\n    case ADD_TODO:\n      return _objectSpread({}, state, {\n        todoList: [...state.todoList, {\n          title: state.title,\n          description: state.description,\n          id: action.payload.id,\n          completed: false\n        }],\n        title: '',\n        description: ''\n      });\n\n    case DELETE_TODO:\n      return _objectSpread({}, state, {\n        todoList: [...action.payload]\n      });\n\n    case SEARCH_TODO:\n      return _objectSpread({}, state, {\n        searchingTodo: [...action.payload]\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default todoItems;","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/reducers/todoItems.js"],"names":["ADD_TODO","DELETE_TODO","CHANGE_DESCRIPTION","CHANGE_TITLE","SEARCH_TODO","load","fromJS","TASKS","namespace","todoItems","todoList","length","title","description","searchingTodo","state","action","type","payload","id","completed"],"mappings":";AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,IAAT,QAAqB,2BAArB;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAEA,IAAIC,KAAK,GAAGF,IAAI,CAAC;AAAEG,EAAAA,SAAS,EAAE;AAAb,CAAD,CAAhB;;AAEA,IAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACE,SAAN,CAAgBC,QAAhB,CAAyBC,MAAxC,EAAgD;AAC/CJ,EAAAA,KAAK,GAAG;AACPE,IAAAA,SAAS,EAAE;AACVG,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,WAAW,EAAE,EAFH;AAGVH,MAAAA,QAAQ,EAAE,EAHA;AAIVI,MAAAA,aAAa,EAAE;AAJL;AADJ,GAAR;AAQA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAML,SAAS,GAAG,CAACM,KAAK,GAAGR,KAAK,CAACE,SAAf,EAA0BO,MAA1B,KAAqC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKd,YAAL;AACC,+BAAYY,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AACD,SAAKhB,kBAAL;AACC,+BAAYa,KAAZ;AAAmBF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAAvC;;AACD,SAAKlB,QAAL;AACC,+BACIe,KADJ;AACWL,QAAAA,QAAQ,EAAE,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoB;AACvCE,UAAAA,KAAK,EAAEG,KAAK,CAACH,KAD0B;AAEvCC,UAAAA,WAAW,EAAEE,KAAK,CAACF,WAFoB;AAGvCM,UAAAA,EAAE,EAAEH,MAAM,CAACE,OAAP,CAAeC,EAHoB;AAIvCC,UAAAA,SAAS,EAAE;AAJ4B,SAApB,CADrB;AAOCR,QAAAA,KAAK,EAAE,EAPR;AAQCC,QAAAA,WAAW,EAAE;AARd;;AAUD,SAAKZ,WAAL;AACC,+BAAYc,KAAZ;AAAmBL,QAAAA,QAAQ,EAAE,CAAC,GAAGM,MAAM,CAACE,OAAX;AAA7B;;AACD,SAAKd,WAAL;AACC,+BAAYW,KAAZ;AAAmBD,QAAAA,aAAa,EAAE,CAAC,GAAGE,MAAM,CAACE,OAAX;AAAlC;;AACD;AACC,+BAAYH,KAAZ;AArBF;AAuBA,CAxBD;;AA0BA,eAAeN,SAAf","sourcesContent":["import { ADD_TODO } from '../action/addTodo';\nimport { DELETE_TODO } from '../action/deleteTodo';\nimport { CHANGE_DESCRIPTION } from '../action/changeDescription';\nimport { CHANGE_TITLE } from '../action/changeTitle';\nimport { SEARCH_TODO } from '../action/searchTodo';\nimport { load } from 'redux-localstorage-simple';\n\nimport { fromJS } from 'immutable';\n\nlet TASKS = load({ namespace: 'todo-list' });\n\nif (!TASKS || !TASKS.todoItems.todoList.length) {\n\tTASKS = {\n\t\ttodoItems: {\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t\ttodoList: [],\n\t\t\tsearchingTodo: [],\n\t\t},\n\t};\n}\n\n// if (!TASKS || !TASKS.todoItems.todoList.length) {\n// \tTASKS = fromJS({\n// \t\ttodoItems: {\n// \t\t\ttitle: '',\n// \t\t\tdescription: '',\n// \t\t\ttodoList: [],\n// \t\t\tsearchingTodo: [],\n// \t\t},\n// \t});\n// }\n\nconst todoItems = (state = TASKS.todoItems, action) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_TITLE:\n\t\t\treturn { ...state, title: action.payload };\n\t\tcase CHANGE_DESCRIPTION:\n\t\t\treturn { ...state, description: action.payload };\n\t\tcase ADD_TODO:\n\t\t\treturn {\n\t\t\t\t...state, todoList: [...state.todoList, {\n\t\t\t\t\ttitle: state.title,\n\t\t\t\t\tdescription: state.description,\n\t\t\t\t\tid: action.payload.id,\n\t\t\t\t\tcompleted: false,\n\t\t\t\t}],\n\t\t\t\ttitle: '',\n\t\t\t\tdescription: '',\n\t\t\t};\n\t\tcase DELETE_TODO:\n\t\t\treturn { ...state, todoList: [...action.payload] };\n\t\tcase SEARCH_TODO:\n\t\t\treturn { ...state, searchingTodo: [...action.payload] };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\nexport default todoItems;"]},"metadata":{},"sourceType":"module"}