{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/TodoList.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { deleteTodo } from '../action/deleteTodo';\nimport TodoListItem from './TodoListItem';\nimport '../style/TodoList.style.scss';\n\nclass TodoList extends Component {\n  render() {\n    const _this$props = this.props,\n          todoList = _this$props.todoList,\n          deleteTodo = _this$props.deleteTodo,\n          searchingTodo = _this$props.searchingTodo; // console.log(searchingTodo);\n\n    console.log(this.props.todoItems);\n    const itemsTodoList = todoList.todoList.map(item => React.createElement(TodoListItem, Object.assign({\n      key: item.id\n    }, item, {\n      removeTodo: () => deleteTodo(todoList, item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }))); // const searchingTodoItems = searchingTodo.map(item =>\n    //     <TodoListItem\n    //         key={item.id}\n    //         {...item}\n    //         removeTodo={() => deleteTodo(todoList, item.id)}\n    //     />);\n\n    return React.createElement(\"ul\", {\n      className: \"TodoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, itemsTodoList);\n  }\n\n}\n\nTodoList.propTypes = {\n  todoList: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = store => {\n  return {\n    todoList: store.todoItems,\n    searchingTodo: store.searchingTodo\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/TodoList.js"],"names":["React","Component","PropTypes","connect","deleteTodo","TodoListItem","TodoList","render","props","todoList","searchingTodo","console","log","todoItems","itemsTodoList","map","item","id","propTypes","shape","title","string","isRequired","description","func","mapStateToProps","store","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,8BAAP;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,MAAM,GAAG;AAAA,wBAEyC,KAAKC,KAF9C;AAAA,UAEEC,QAFF,eAEEA,QAFF;AAAA,UAEYL,UAFZ,eAEYA,UAFZ;AAAA,UAEwBM,aAFxB,eAEwBA,aAFxB,EAGL;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,SAAvB;AAEA,UAAMC,aAAa,GAAGL,QAAQ,CAACA,QAAT,CAAkBM,GAAlB,CAAsBC,IAAI,IAC5C,oBAAC,YAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC;AADd,OAEQD,IAFR;AAGI,MAAA,UAAU,EAAE,MAAMZ,UAAU,CAACK,QAAD,EAAWO,IAAI,CAACC,EAAhB,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADkB,CAAtB,CANK,CAaL;AACA;AACA;AACA;AACA;AACA;;AAEA,WACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,aADL,CADJ;AAKH;;AA3B4B;;AA8BjCR,QAAQ,CAACY,SAAT,GAAqB;AACjBT,EAAAA,QAAQ,EAAEP,SAAS,CAACiB,KAAV,CAAgB;AACtBC,IAAAA,KAAK,EAAElB,SAAS,CAACmB,MAAV,CAAiBC,UADF;AAEtBC,IAAAA,WAAW,EAAErB,SAAS,CAACmB,MAAV,CAAiBC;AAFR,GAAhB,EAGPA,UAJc;AAKjBlB,EAAAA,UAAU,EAAEF,SAAS,CAACsB,IAAV,CAAeF;AALV,CAArB;;AAQA,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACb,SADb;AAEHH,IAAAA,aAAa,EAAEgB,KAAK,CAAChB;AAFlB,GAAP;AAIH,CALD;;AAOA,MAAMiB,kBAAkB,GAAG;AACvBvB,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {PropTypes} from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {deleteTodo} from '../action/deleteTodo';\n\nimport TodoListItem from './TodoListItem';\nimport '../style/TodoList.style.scss';\n\nclass TodoList extends Component {\n\n    render() {\n\n        const {todoList, deleteTodo, searchingTodo} = this.props;\n        // console.log(searchingTodo);\n        console.log(this.props.todoItems);\n\n        const itemsTodoList = todoList.todoList.map(item =>\n            <TodoListItem\n                key={item.id}\n                {...item}\n                removeTodo={() => deleteTodo(todoList, item.id)}\n            />);\n\n        // const searchingTodoItems = searchingTodo.map(item =>\n        //     <TodoListItem\n        //         key={item.id}\n        //         {...item}\n        //         removeTodo={() => deleteTodo(todoList, item.id)}\n        //     />);\n\n        return (\n            <ul className='TodoList'>\n                {itemsTodoList}\n            </ul>\n        )\n    }\n}\n\nTodoList.propTypes = {\n    todoList: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n    }).isRequired,\n    deleteTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        todoList: store.todoItems,\n        searchingTodo: store.searchingTodo\n    }\n};\n\nconst mapDispatchToProps = {\n    deleteTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}