{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js\";\nimport React, { Component } from 'react'; // import {PropTypes} from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport UUID from 'uuid';\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      description: '',\n      id: '',\n      completed: false,\n      todoList: []\n    };\n\n    this.clearForm = () => {\n      this.setState({\n        title: '',\n        description: '',\n        id: ''\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {// this.setState(() => ({\n      //     [target.name]: target.value,\n      //     id: UUID()\n      // }))\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // this.setState(({id, title, description, completed})=> ({\n      //     todoList: {id, title, description, completed}\n      // }));\n\n      this.setState(({\n        target\n      }) => ({\n        todoList: {\n          [target.name]: target.value,\n          id: UUID(),\n          completed: false\n        }\n      })); // this.props.addTodo(this.state);\n\n      this.clearForm();\n    };\n  }\n\n  render() {\n    console.log(this.state); // const {addTodo} = this.props;\n\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Title:\"), React.createElement(\"input\", {\n      className: \"Form-input\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      id: \"todoTitle\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"textarea\", {\n      className: \"Form-input\",\n      name: \"description\",\n      id: \"todoDescription\",\n      cols: \"30\",\n      rows: \"10\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(ButtonForm, {\n      type: \"submit\",\n      name: \"ADD TODO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  addTodo\n};\nexport default Form; // export default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js"],"names":["React","Component","connect","addTodo","UUID","ButtonForm","Form","state","title","description","id","completed","todoList","clearForm","setState","handleChange","target","handleSubmit","e","preventDefault","name","value","render","console","log","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import {PropTypes} from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addTodo} from '../action/addTodo';\nimport UUID from 'uuid';\n\n\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n\n    // static propTypes = {\n    //     addTodo: PropTypes.func.isRequired\n    // };\n\n    state = {\n        title: '',\n        description: '',\n        id: '',\n        completed: false,\n        todoList: []\n    };\n\n    clearForm = () => {\n        this.setState({\n            title: '',\n            description: '',\n            id: ''\n        });\n    };\n\n    handleChange = ({target}) => {\n        // this.setState(() => ({\n        //     [target.name]: target.value,\n        //     id: UUID()\n        // }))\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // this.setState(({id, title, description, completed})=> ({\n        //     todoList: {id, title, description, completed}\n        // }));\n        this.setState(({target}) => ({\n            todoList:{\n            [target.name]: target.value,\n            id: UUID(),\n            completed: false\n        }}));\n\n\n        // this.props.addTodo(this.state);\n        this.clearForm();\n    };\n\n    render() {\n        console.log(this.state);\n        // const {addTodo} = this.props;\n\n        return (\n            <div className='Form'>\n                <form\n                    onSubmit={this.handleSubmit}\n                >\n                    <div className='Form-group'>\n                        <label\n                            className='Form-label'\n                            htmlFor='todoTitle'\n                        >Title:</label>\n                        <input\n                            className='Form-input'\n                            type='text'\n                            name='title'\n                            placeholder='Title'\n                            id='todoTitle'\n                            value={this.state.title}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <div className='Form-group'>\n                        <label\n                            className='Form-label'\n                            htmlFor='todoDescription'\n                        >Description:</label>\n                        <textarea\n                            className='Form-input'\n                            name='description'\n                            id='todoDescription'\n                            cols='30'\n                            rows='10'\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <ButtonForm type='submit' name='ADD TODO'/>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = () => {\n    return {}\n};\n\nconst mapDispatchToProps = {\n    addTodo\n};\n\nexport default Form;\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}