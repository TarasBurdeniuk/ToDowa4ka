{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js\";\nimport React, { Component } from 'react'; // import {PropTypes} from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport { changeDescription } from '../action/changeDescription';\nimport { changeTitle } from '../action/changeTitle';\nimport UUID from 'uuid';\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n  // static propTypes = {\n  //     addTodo: PropTypes.func.isRequired\n  // };\n  // state = {\n  //     title: '',\n  //     description: '',\n  //     id: '',\n  //     completed: false,\n  //     todoItems: []\n  // };\n  // clearForm = () => {\n  //     this.setState({\n  //         title: '',\n  //         description: '',\n  //         id: ''\n  //     });\n  // };\n  // handleChange = ({target}) => {\n  //     this.setState(() => ({\n  //         [target.name]: target.value,\n  //         id: UUID()\n  //     }))\n  // };\n  // handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     this.setState(({id, title, description, completed, todoItems})=> ({\n  //         todoItems: [...todoItems,{id, title, description, completed}]\n  //     }));\n  //\n  //     this.props.addTodo(this.state.todoItems);\n  //     this.clearForm();\n  // };\n  render() {\n    const _this$props = this.props,\n          addTodo = _this$props.addTodo,\n          title = _this$props.title,\n          description = _this$props.description,\n          changeTitle = _this$props.changeTitle,\n          changeDescription = _this$props.changeDescription; // console.log(this.props);\n\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addTodo(this.store);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Title:\"), React.createElement(\"input\", {\n      className: \"Form-input\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      id: \"todoTitle\",\n      value: title,\n      onChange: e => changeTitle(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"textarea\", {\n      className: \"Form-input\",\n      name: \"description\",\n      id: \"todoDescription\",\n      cols: \"30\",\n      rows: \"10\",\n      value: description,\n      onChange: e => changeDescription(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(ButtonForm, {\n      type: \"submit\",\n      name: \"ADD TODO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, title, \" \", description));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    title: store.title,\n    description: store.description\n  };\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n  changeDescription,\n  changeTitle\n}; // export default Form;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js"],"names":["React","Component","connect","addTodo","changeDescription","changeTitle","UUID","ButtonForm","Form","render","props","title","description","e","preventDefault","store","target","value","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import {PropTypes} from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addTodo} from '../action/addTodo';\nimport {changeDescription} from '../action/changeDescription';\nimport {changeTitle} from '../action/changeTitle';\nimport UUID from 'uuid';\n\n\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n\n    // static propTypes = {\n    //     addTodo: PropTypes.func.isRequired\n    // };\n\n    // state = {\n    //     title: '',\n    //     description: '',\n    //     id: '',\n    //     completed: false,\n    //     todoItems: []\n    // };\n\n    // clearForm = () => {\n    //     this.setState({\n    //         title: '',\n    //         description: '',\n    //         id: ''\n    //     });\n    // };\n\n    // handleChange = ({target}) => {\n    //     this.setState(() => ({\n    //         [target.name]: target.value,\n    //         id: UUID()\n    //     }))\n    // };\n\n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     this.setState(({id, title, description, completed, todoItems})=> ({\n    //         todoItems: [...todoItems,{id, title, description, completed}]\n    //     }));\n    //\n    //     this.props.addTodo(this.state.todoItems);\n    //     this.clearForm();\n    // };\n\n    render() {\n        const {addTodo, title, description, changeTitle, changeDescription} = this.props;\n        // console.log(this.props);\n\n        return (\n            <div className='Form'>\n                <form\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        addTodo(this.store)\n                    }}\n                >\n                    <div className='Form-group'>\n                        <label\n                            className='Form-label'\n                            htmlFor='todoTitle'\n                        >Title:</label>\n                        <input\n                            className='Form-input'\n                            type='text'\n                            name='title'\n                            placeholder='Title'\n                            id='todoTitle'\n                            value={title}\n                            onChange={(e) => changeTitle(e.target.value)}\n                        />\n                    </div>\n                    <div className='Form-group'>\n                        <label\n                            className='Form-label'\n                            htmlFor='todoDescription'\n                        >Description:</label>\n                        <textarea\n                            className='Form-input'\n                            name='description'\n                            id='todoDescription'\n                            cols='30'\n                            rows='10'\n                            value={description}\n                            onChange={(e) => changeDescription(e.target.value)}\n                        />\n                    </div>\n                    <ButtonForm type='submit' name='ADD TODO'/>\n                </form>\n                <div>{title} {description}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        title: store.title,\n        description: store.description\n    }\n};\n\nconst mapDispatchToProps = {\n    addTodo,\n    changeDescription,\n    changeTitle\n};\n\n// export default Form;\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}