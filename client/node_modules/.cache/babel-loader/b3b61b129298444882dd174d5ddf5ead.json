{"ast":null,"code":"export const SEARCH_TODO = 'SEARCH_TODO';\nexport const searchTodo = (todoLIst, searchingWord) => {\n  const newTodoList = todoLIst.filter(item => {\n    let result = [];\n    const desc = item.description.toLowerCase().split(' ').filter(item => item === searchingWord);\n\n    if (Object.is(item.title.toLowerCase(), searchingWord)) {\n      result.push(item);\n    } else if (desc.length) {\n      // const i = desc.filter(item => Object.is(item, searchingWord));\n      result.push(item);\n    }\n\n    return result;\n  });\n  return {\n    type: SEARCH_TODO,\n    payload: newTodoList\n  };\n};","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/action/searchTodo.js"],"names":["SEARCH_TODO","searchTodo","todoLIst","searchingWord","newTodoList","filter","item","result","desc","description","toLowerCase","split","Object","is","title","push","length","type","payload"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,aAAX,KAA6B;AACnD,QAAMC,WAAW,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAI;AACxC,QAAIC,MAAM,GAAG,EAAb;AACA,UAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,CAAiBC,WAAjB,GAA+BC,KAA/B,CAAqC,GAArC,EAA0CN,MAA1C,CAAiDC,IAAI,IAAIA,IAAI,KAAKH,aAAlE,CAAb;;AACA,QAAIS,MAAM,CAACC,EAAP,CAAUP,IAAI,CAACQ,KAAL,CAAWJ,WAAX,EAAV,EAAoCP,aAApC,CAAJ,EAAwD;AACpDI,MAAAA,MAAM,CAACQ,IAAP,CAAYT,IAAZ;AACH,KAFD,MAEO,IAAIE,IAAI,CAACQ,MAAT,EAAiB;AACpB;AACAT,MAAAA,MAAM,CAACQ,IAAP,CAAYT,IAAZ;AACH;;AACD,WAAOC,MAAP;AACH,GAVmB,CAApB;AAWA,SAAO;AACHU,IAAAA,IAAI,EAAEjB,WADH;AAEHkB,IAAAA,OAAO,EAAEd;AAFN,GAAP;AAIH,CAhBM","sourcesContent":["export const SEARCH_TODO = 'SEARCH_TODO';\n\nexport const searchTodo = (todoLIst, searchingWord) => {\n    const newTodoList = todoLIst.filter(item => {\n        let result = [];\n        const desc = item.description.toLowerCase().split(' ').filter(item => item === searchingWord);\n        if (Object.is(item.title.toLowerCase(), searchingWord)) {\n            result.push(item);\n        } else if (desc.length) {\n            // const i = desc.filter(item => Object.is(item, searchingWord));\n            result.push(item);\n        }\n        return result;\n    });\n    return {\n        type: SEARCH_TODO,\n        payload: newTodoList\n    }\n};"]},"metadata":{},"sourceType":"module"}