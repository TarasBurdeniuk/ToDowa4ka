{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/TodoList.js\";\nimport React, { Component } from 'react'; // import {PropTypes} from 'prop-types';\n\nimport { connect } from \"react-redux\";\nimport { deleteTodo } from '../action/deleteTodo';\nimport TodoListItem from './TodoListItem';\nimport '../style/TodoList.style.scss';\n\nclass TodoList extends Component {\n  render() {\n    const _this$props = this.props,\n          todoList = _this$props.todoList,\n          deleteTodo = _this$props.deleteTodo; // console.log(this.props);\n\n    const itemsTodoList = todoList.todoList.map(item => React.createElement(TodoListItem, Object.assign({\n      key: item.id\n    }, item, {\n      removeTodo: () => deleteTodo(todoList) // removeTodo={() => deleteTodo(item.id)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n    console.log(itemsTodoList);\n    return React.createElement(\"ul\", {\n      className: \"TodoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, itemsTodoList);\n  }\n\n} // TodoList.propTypes = {\n//     todoItems: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         title: PropTypes.string.isRequired,\n//         description: PropTypes.string.isRequired,\n//         completed: PropTypes.bool.isRequired\n//     }).isRequired,\n//     deleteTodo: PropTypes.func.isRequired\n// };\n\n\nconst mapStateToProps = store => {\n  return {\n    todoList: store.todoItems\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteTodo\n}; // export default TodoList;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/TodoList.js"],"names":["React","Component","connect","deleteTodo","TodoListItem","TodoList","render","props","todoList","itemsTodoList","map","item","id","console","log","mapStateToProps","store","todoItems","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,8BAAP;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,MAAM,GAAG;AAAA,wBAE0B,KAAKC,KAF/B;AAAA,UAEEC,QAFF,eAEEA,QAFF;AAAA,UAEYL,UAFZ,eAEYA,UAFZ,EAGL;;AAEA,UAAMM,aAAa,GAAGD,QAAQ,CAACA,QAAT,CAAkBE,GAAlB,CAAsBC,IAAI,IAC5C,oBAAC,YAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC;AADd,OAEQD,IAFR;AAGI,MAAA,UAAU,EAAE,MAAMR,UAAU,CAACK,QAAD,CAHhC,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADkB,CAAtB;AAQAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AAEA,WACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKA,aAHL,CADJ;AAOH;;AAxB4B,C,CA2BjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACC;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACvBf,EAAAA;AADuB,CAA3B,C,CAIA;;AACA,eAAeD,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\n// import {PropTypes} from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {deleteTodo} from '../action/deleteTodo';\n\nimport TodoListItem from './TodoListItem';\nimport '../style/TodoList.style.scss';\n\nclass TodoList extends Component {\n\n    render() {\n\n        const {todoList, deleteTodo} = this.props;\n        // console.log(this.props);\n\n        const itemsTodoList = todoList.todoList.map(item =>\n            <TodoListItem\n                key={item.id}\n                {...item}\n                removeTodo={() => deleteTodo(todoList)}\n                // removeTodo={() => deleteTodo(item.id)}\n            />);\n\n        console.log(itemsTodoList);\n\n        return (\n            <ul className='TodoList'>\n                {/*<TodoListItem  description='first description' id='123' title='first title' completed={false}/>*/}\n                {/*{todoList.map(item => <TodoListItem {...item} removeTodo={deleteTodo}/>)}*/}\n                {itemsTodoList}\n            </ul>\n        )\n    }\n}\n\n// TodoList.propTypes = {\n//     todoItems: PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         title: PropTypes.string.isRequired,\n//         description: PropTypes.string.isRequired,\n//         completed: PropTypes.bool.isRequired\n//     }).isRequired,\n//     deleteTodo: PropTypes.func.isRequired\n// };\n\nconst mapStateToProps = (store) => {\n    return {\n        todoList: store.todoItems\n    }\n};\n\nconst mapDispatchToProps = {\n    deleteTodo\n};\n\n// export default TodoList;\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}