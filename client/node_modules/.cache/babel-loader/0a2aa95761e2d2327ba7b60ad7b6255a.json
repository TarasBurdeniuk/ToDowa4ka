{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createAction;\n\nvar _util = require('./util');\n\nvar _v = require('uuid/v1');\n\nvar _v2 = _interopRequireDefault(_v);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction noop() {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return payload;\n}\n\nfunction createAction(type, payloadCreator, metaCreator) {\n  var autoType = '';\n\n  if (!(0, _util.isString)(type)) {\n    metaCreator = payloadCreator;\n    payloadCreator = type;\n    type = autoType = (0, _v2.default)();\n  }\n\n  payloadCreator = (0, _util.isFunc)(payloadCreator) ? payloadCreator : noop;\n\n  var fn = function fn() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return function (dispatch, getState) {\n      return Promise.resolve(payloadCreator.apply({\n        getState: getState\n      }, args)).then(function () {\n        var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var result = {\n          payload: payload,\n          type: type\n        };\n\n        if ((0, _util.isFunc)(metaCreator)) {\n          result.meta = metaCreator.apply(undefined, args);\n        }\n\n        dispatch(result);\n        /**\n         * why need to return result\n         * use case\n         *   dispatch(...).then(result => ...)\n         * warning: no test cases for this (TODO)\n         */\n\n        return result;\n      });\n    };\n  };\n\n  fn.type = type;\n\n  if (autoType) {\n    fn.toString = function () {\n      return type;\n    };\n  }\n\n  return fn;\n}","map":null,"metadata":{},"sourceType":"script"}