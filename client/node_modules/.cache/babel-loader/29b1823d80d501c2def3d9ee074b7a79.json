{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/container/Form.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport { changeDescription } from '../action/changeDescription';\nimport { changeTitle } from '../action/changeTitle';\nimport ButtonForm from '../components/ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n  render() {\n    const _this$props = this.props,\n          addTodo = _this$props.addTodo,\n          title = _this$props.title,\n          description = _this$props.description,\n          changeTitle = _this$props.changeTitle,\n          changeDescription = _this$props.changeDescription;\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        if (!title || !description) return;\n        addTodo();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Title:\"), React.createElement(\"input\", {\n      className: \"Form-input\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      id: \"todoTitle\",\n      value: title,\n      onChange: e => changeTitle(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"textarea\", {\n      className: \"Form-input\",\n      name: \"description\",\n      id: \"todoDescription\",\n      placeholder: \"Description\",\n      cols: \"30\",\n      rows: \"10\",\n      value: description,\n      onChange: e => changeDescription(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(ButtonForm, {\n      type: \"submit\",\n      name: \"ADD TODO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n  }\n\n}\n\nForm.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = store => {\n  return {\n    title: store.todoItems.title,\n    description: store.todoItems.description\n  };\n}; // const mapStateToProps = (store) => {\n// \treturn {\n// \t\ttitle: store.todoItems.get('title').toJS(),\n// \t\tdescription: store.todoItems.get('description').toJS(),\n// \t};\n// };\n\n\nconst mapDispatchToProps = {\n  addTodo,\n  changeDescription,\n  changeTitle\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/container/Form.js"],"names":["React","Component","PropTypes","connect","addTodo","changeDescription","changeTitle","ButtonForm","Form","render","props","title","description","e","preventDefault","target","value","propTypes","func","isRequired","mapStateToProps","store","todoItems","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport { changeDescription } from '../action/changeDescription';\nimport { changeTitle } from '../action/changeTitle';\n\n\nimport ButtonForm from '../components/ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n\n\tstatic propTypes = {\n\t\taddTodo: PropTypes.func.isRequired,\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\taddTodo,\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\tchangeTitle,\n\t\t\tchangeDescription,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<div className='Form'>\n\t\t\t\t<form\n\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif (!title || !description) return;\n\t\t\t\t\t\taddTodo();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className='Form-group'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tclassName='Form-label'\n\t\t\t\t\t\t\thtmlFor='todoTitle'\n\t\t\t\t\t\t>Title:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='Form-input'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\tplaceholder='Title'\n\t\t\t\t\t\t\tid='todoTitle'\n\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\tonChange={(e) => changeTitle(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='Form-group'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tclassName='Form-label'\n\t\t\t\t\t\t\thtmlFor='todoDescription'\n\t\t\t\t\t\t>Description:</label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tclassName='Form-input'\n\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\tid='todoDescription'\n\t\t\t\t\t\t\tplaceholder='Description'\n\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\trows='10'\n\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\tonChange={(e) => changeDescription(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ButtonForm type='submit' name='ADD TODO'/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => {\n\treturn {\n\t\ttitle: store.todoItems.title,\n\t\tdescription: store.todoItems.description,\n\t};\n};\n\n// const mapStateToProps = (store) => {\n// \treturn {\n// \t\ttitle: store.todoItems.get('title').toJS(),\n// \t\tdescription: store.todoItems.get('description').toJS(),\n// \t};\n// };\n\nconst mapDispatchToProps = {\n\taddTodo,\n\tchangeDescription,\n\tchangeTitle,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}