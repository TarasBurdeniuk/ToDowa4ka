{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/TodoList.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { deleteTodo } from '../action/deleteTodo';\nimport TodoListItem from './TodoListItem';\nimport '../style/TodoList.style.scss';\n\nclass TodoList extends Component {\n  render() {\n    // const {todoItems, deleteTodo} = this.props;\n    return React.createElement(\"ul\", {\n      className: \"TodoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(TodoListItem, {\n      description: \"first description\",\n      id: \"123\",\n      title: \"first title\",\n      completed: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\n\nTodoList.propTypes = {\n  todoItems: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = store => {\n  return {\n    todoItems: store.todoItems\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/TodoList.js"],"names":["React","Component","PropTypes","connect","deleteTodo","TodoListItem","TodoList","render","propTypes","todoItems","shape","id","string","isRequired","title","description","completed","bool","func","mapStateToProps","store","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,8BAAP;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,MAAM,GAAG;AAEL;AACA,WACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAe,MAAA,WAAW,EAAC,mBAA3B;AAA+C,MAAA,EAAE,EAAC,KAAlD;AAAwD,MAAA,KAAK,EAAC,aAA9D;AAA4E,MAAA,SAAS,EAAE,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AAX4B;;AAcjCD,QAAQ,CAACE,SAAT,GAAqB;AACjBC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,KAAV,CAAgB;AACvBC,IAAAA,EAAE,EAAET,SAAS,CAACU,MAAV,CAAiBC,UADE;AAEvBC,IAAAA,KAAK,EAAEZ,SAAS,CAACU,MAAV,CAAiBC,UAFD;AAGvBE,IAAAA,WAAW,EAAEb,SAAS,CAACU,MAAV,CAAiBC,UAHP;AAIvBG,IAAAA,SAAS,EAAEd,SAAS,CAACe,IAAV,CAAeJ;AAJH,GAAhB,EAKRA,UANc;AAOjBT,EAAAA,UAAU,EAAEF,SAAS,CAACgB,IAAV,CAAeL;AAPV,CAArB;;AAUA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHX,IAAAA,SAAS,EAAEW,KAAK,CAACX;AADd,GAAP;AAGH,CAJD;;AAMA,MAAMY,kBAAkB,GAAG;AACvBjB,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {PropTypes} from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {deleteTodo} from '../action/deleteTodo';\n\nimport TodoListItem from './TodoListItem';\nimport '../style/TodoList.style.scss';\n\nclass TodoList extends Component {\n\n    render() {\n\n        // const {todoItems, deleteTodo} = this.props;\n        return (\n            <ul className='TodoList'>\n                <TodoListItem  description='first description' id='123' title='first title' completed={false}/>\n                {/*{todoItems.map(item => <TodoListItem key={item.id} {...item} removeTodo={deleteTodo}/>)}*/}\n            </ul>\n        )\n    }\n}\n\nTodoList.propTypes = {\n    todoItems: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        completed: PropTypes.bool.isRequired\n    }).isRequired,\n    deleteTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        todoItems: store.todoItems\n    }\n};\n\nconst mapDispatchToProps = {\n    deleteTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}