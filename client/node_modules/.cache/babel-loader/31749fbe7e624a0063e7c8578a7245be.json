{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js\";\nimport React, { Component } from 'react'; // import {PropTypes} from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport { changeDescription } from '../action/changeDescription';\nimport { changeTitle } from '../action/changeTitle'; // import UUID from 'uuid';\n\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n  // static propTypes = {\n  //     addTodo: PropTypes.func.isRequired\n  // };\n  // state = {\n  //     title: '',\n  //     description: '',\n  //     id: '',\n  //     completed: false,\n  //     todoItems: []\n  // };\n  // clearForm = () => {\n  //     this.setState({\n  //         title: '',\n  //         description: '',\n  //         id: ''\n  //     });\n  // };\n  // handleChange = ({target}) => {\n  //     this.setState(() => ({\n  //         [target.name]: target.value,\n  //         id: UUID()\n  //     }))\n  // };\n  // handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     this.setState(({id, title, description, completed, todoItems})=> ({\n  //         todoItems: [...todoItems,{id, title, description, completed}]\n  //     }));\n  //\n  //     this.props.addTodo(this.state.todoItems);\n  //     this.clearForm();\n  // };\n  render() {\n    const _this$props = this.props,\n          addTodo = _this$props.addTodo,\n          title = _this$props.title,\n          description = _this$props.description,\n          changeTitle = _this$props.changeTitle,\n          changeDescription = _this$props.changeDescription;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Title:\"), React.createElement(\"input\", {\n      className: \"Form-input\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      id: \"todoTitle\" // value={title}\n      ,\n      onChange: e => changeTitle(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"Form-label\",\n      htmlFor: \"todoDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"textarea\", {\n      className: \"Form-input\",\n      name: \"description\",\n      id: \"todoDescription\",\n      cols: \"30\",\n      rows: \"10\" // value={description}\n      ,\n      onChange: e => changeDescription(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(ButtonForm // type='submit'\n    , {\n      name: \"ADD TODO\",\n      onClick: e => {\n        e.preventDefault();\n        addTodo(this.props);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, title, \" \", description));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    title: store.title,\n    description: store.description\n  };\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n  changeDescription,\n  changeTitle\n}; // export default Form;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/components/Form.js"],"names":["React","Component","connect","addTodo","changeDescription","changeTitle","ButtonForm","Form","render","props","title","description","console","log","e","target","value","preventDefault","mapStateToProps","store","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import {PropTypes} from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addTodo} from '../action/addTodo';\nimport {changeDescription} from '../action/changeDescription';\nimport {changeTitle} from '../action/changeTitle';\n// import UUID from 'uuid';\n\n\nimport ButtonForm from './ButtonForm';\nimport '../style/Form.style.scss';\n\nclass Form extends Component {\n\n    // static propTypes = {\n    //     addTodo: PropTypes.func.isRequired\n    // };\n\n    // state = {\n    //     title: '',\n    //     description: '',\n    //     id: '',\n    //     completed: false,\n    //     todoItems: []\n    // };\n\n    // clearForm = () => {\n    //     this.setState({\n    //         title: '',\n    //         description: '',\n    //         id: ''\n    //     });\n    // };\n\n    // handleChange = ({target}) => {\n    //     this.setState(() => ({\n    //         [target.name]: target.value,\n    //         id: UUID()\n    //     }))\n    // };\n\n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     this.setState(({id, title, description, completed, todoItems})=> ({\n    //         todoItems: [...todoItems,{id, title, description, completed}]\n    //     }));\n    //\n    //     this.props.addTodo(this.state.todoItems);\n    //     this.clearForm();\n    // };\n\n    render() {\n        const {addTodo, title, description, changeTitle, changeDescription} = this.props;\n        console.log(this.props);\n\n        return (\n            <div className='Form'>\n                <div className='Form-group'>\n                    <label\n                        className='Form-label'\n                        htmlFor='todoTitle'\n                    >Title:</label>\n                    <input\n                        className='Form-input'\n                        type='text'\n                        name='title'\n                        placeholder='Title'\n                        id='todoTitle'\n                        // value={title}\n                        onChange={(e) => changeTitle(e.target.value)}\n                    />\n                </div>\n                <div className='Form-group'>\n                    <label\n                        className='Form-label'\n                        htmlFor='todoDescription'\n                    >Description:</label>\n                    <textarea\n                        className='Form-input'\n                        name='description'\n                        id='todoDescription'\n                        cols='30'\n                        rows='10'\n                        // value={description}\n                        onChange={(e) => changeDescription(e.target.value)}\n                    />\n                </div>\n                <ButtonForm\n                    // type='submit'\n                    name='ADD TODO'\n                    onClick={(e) => {\n                        e.preventDefault();\n                        addTodo(this.props)\n                    }}/>\n                <div>{title} {description}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        title: store.title,\n        description: store.description\n    }\n};\n\nconst mapDispatchToProps = {\n    addTodo,\n    changeDescription,\n    changeTitle\n};\n\n// export default Form;\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}