{"ast":null,"code":"import _objectSpread from \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TODO } from '../action/addTodo';\nimport { DELETE_TODO } from '../action/deleteTodo';\nimport { CHANGE_DESCRIPTION } from '../action/changeDescription';\nimport { CHANGE_TITLE } from '../action/changeTitle';\nimport { SEARCH_TODO } from \"../action/searchTodo\";\nimport { load } from 'redux-localstorage-simple';\nlet TASKS = load({\n  namespace: 'todo-list'\n});\nconsole.log(TASKS);\n\nif (!TASKS || !TASKS.todoItems.todoList.length) {\n  TASKS = {\n    initialState: {\n      title: '',\n      description: '',\n      todoList: [],\n      searchingTodo: []\n    }\n  };\n} // console.log(TASKS);\n// const initialState = {\n//     title: '',\n//     description: '',\n//     todoList: [],\n//     searchingTodo: []\n// };\n\n\nconst todoItems = (state = TASKS.initialState, action) => {\n  switch (action.type) {\n    case CHANGE_TITLE:\n      return _objectSpread({}, state, {\n        title: action.payload\n      });\n\n    case CHANGE_DESCRIPTION:\n      return _objectSpread({}, state, {\n        description: action.payload\n      });\n\n    case ADD_TODO:\n      return _objectSpread({}, state, {\n        todoList: [...state.todoList, {\n          title: state.title,\n          description: state.description,\n          id: action.payload.id,\n          completed: false\n        }],\n        title: '',\n        description: ''\n      });\n\n    case DELETE_TODO:\n      return _objectSpread({}, state, {\n        todoList: [...action.payload]\n      });\n\n    case SEARCH_TODO:\n      return _objectSpread({}, state, {\n        searchingTodo: [...action.payload]\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default todoItems;","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/reducers/todoItems.js"],"names":["ADD_TODO","DELETE_TODO","CHANGE_DESCRIPTION","CHANGE_TITLE","SEARCH_TODO","load","TASKS","namespace","console","log","todoItems","todoList","length","initialState","title","description","searchingTodo","state","action","type","payload","id","completed"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,mBAAvB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,kBAAR,QAAiC,6BAAjC;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,IAAR,QAAmB,2BAAnB;AAEA,IAAIC,KAAK,GAAGD,IAAI,CAAC;AAACE,EAAAA,SAAS,EAAE;AAAZ,CAAD,CAAhB;AACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,IAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACI,SAAN,CAAgBC,QAAhB,CAAyBC,MAAxC,EAAgD;AAC5CN,EAAAA,KAAK,GAAG;AACJO,IAAAA,YAAY,EAAE;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,WAAW,EAAE,EAFH;AAGVJ,MAAAA,QAAQ,EAAE,EAHA;AAIVK,MAAAA,aAAa,EAAE;AAJL;AADV,GAAR;AAQH,C,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMN,SAAS,GAAG,CAACO,KAAK,GAAGX,KAAK,CAACO,YAAf,EAA6BK,MAA7B,KAAwC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,YAAL;AACI,+BAAWc,KAAX;AAAkBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAhC;;AACJ,SAAKlB,kBAAL;AACI,+BAAWe,KAAX;AAAkBF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAAtC;;AACJ,SAAKpB,QAAL;AACI,+BACOiB,KADP;AACcN,QAAAA,QAAQ,EAAE,CAAC,GAAGM,KAAK,CAACN,QAAV,EAAoB;AACpCG,UAAAA,KAAK,EAAEG,KAAK,CAACH,KADuB;AAEpCC,UAAAA,WAAW,EAAEE,KAAK,CAACF,WAFiB;AAGpCM,UAAAA,EAAE,EAAEH,MAAM,CAACE,OAAP,CAAeC,EAHiB;AAIpCC,UAAAA,SAAS,EAAE;AAJyB,SAApB,CADxB;AAOIR,QAAAA,KAAK,EAAE,EAPX;AAQIC,QAAAA,WAAW,EAAE;AARjB;;AAUJ,SAAKd,WAAL;AACI,+BAAWgB,KAAX;AAAkBN,QAAAA,QAAQ,EAAE,CAAC,GAAGO,MAAM,CAACE,OAAX;AAA5B;;AACJ,SAAKhB,WAAL;AACI,+BAAWa,KAAX;AAAkBD,QAAAA,aAAa,EAAE,CAAC,GAAGE,MAAM,CAACE,OAAX;AAAjC;;AACJ;AACI,+BAAWH,KAAX;AArBR;AAuBH,CAxBD;;AA0BA,eAAeP,SAAf","sourcesContent":["import {ADD_TODO} from '../action/addTodo';\nimport {DELETE_TODO} from '../action/deleteTodo';\nimport {CHANGE_DESCRIPTION} from '../action/changeDescription';\nimport {CHANGE_TITLE} from '../action/changeTitle';\nimport {SEARCH_TODO} from \"../action/searchTodo\";\nimport {load} from 'redux-localstorage-simple';\n\nlet TASKS = load({namespace: 'todo-list'});\nconsole.log(TASKS);\n\nif (!TASKS || !TASKS.todoItems.todoList.length) {\n    TASKS = {\n        initialState: {\n            title: '',\n            description: '',\n            todoList: [],\n            searchingTodo: []\n        }\n    }\n}\n\n// console.log(TASKS);\n\n// const initialState = {\n//     title: '',\n//     description: '',\n//     todoList: [],\n//     searchingTodo: []\n// };\n\nconst todoItems = (state = TASKS.initialState, action) => {\n    switch (action.type) {\n        case CHANGE_TITLE:\n            return {...state, title: action.payload};\n        case CHANGE_DESCRIPTION:\n            return {...state, description: action.payload};\n        case ADD_TODO:\n            return {\n                ...state, todoList: [...state.todoList, {\n                    title: state.title,\n                    description: state.description,\n                    id: action.payload.id,\n                    completed: false\n                }],\n                title: '',\n                description: ''\n            };\n        case DELETE_TODO:\n            return {...state, todoList: [...action.payload]};\n        case SEARCH_TODO:\n            return {...state, searchingTodo: [...action.payload]};\n        default:\n            return {...state};\n    }\n};\n\nexport default todoItems;"]},"metadata":{},"sourceType":"module"}