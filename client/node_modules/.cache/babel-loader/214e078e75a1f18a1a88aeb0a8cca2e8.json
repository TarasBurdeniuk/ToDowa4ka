{"ast":null,"code":"var _jsxFileName = \"/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/container/Form.js\";\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport { changeDescription } from '../action/changeDescription';\nimport { changeTitle } from '../action/changeTitle';\nimport ButtonForm from '../components/ButtonForm';\nimport '../style/Form.style.scss';\n\nconst Form = ({\n  addTodo,\n  title,\n  description,\n  changeTitle,\n  changeDescription\n}) => {\n  return React.createElement(\"div\", {\n    className: \"Form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      if (!title || !description) return;\n      addTodo();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"Form-label\",\n    htmlFor: \"todoTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Title:\"), React.createElement(\"input\", {\n    className: \"Form-input\",\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    id: \"todoTitle\",\n    value: title,\n    onChange: e => changeTitle(e.target.value),\n    maxLength: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"Form-label\",\n    htmlFor: \"todoDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"textarea\", {\n    className: \"Form-input\",\n    name: \"description\",\n    id: \"todoDescription\",\n    placeholder: \"Description\",\n    cols: \"30\",\n    rows: \"10\",\n    value: description,\n    onChange: e => changeDescription(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(ButtonForm, {\n    type: \"submit\",\n    name: \"ADD TODO\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nForm.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = store => ({\n  title: store.todoItems.title,\n  description: store.todoItems.description\n});\n\nconst mapDispatchToProps = {\n  addTodo,\n  changeDescription,\n  changeTitle\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/tarasburdenuk/Desktop/DAN/test/react/todowa4ka/src/container/Form.js"],"names":["React","PropTypes","connect","addTodo","changeDescription","changeTitle","ButtonForm","Form","title","description","e","preventDefault","target","value","propTypes","func","isRequired","mapStateToProps","store","todoItems","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAGA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,0BAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEJ,EAAAA,OAAF;AAAWK,EAAAA,KAAX;AAAkBC,EAAAA,WAAlB;AAA+BJ,EAAAA,WAA/B;AAA4CD,EAAAA;AAA5C,CAAD,KAAqE;AACjF,SACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,QAAQ,EAAGM,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAI,CAACH,KAAD,IAAU,CAACC,WAAf,EAA4B;AAC5BN,MAAAA,OAAO;AACP,KALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAC,YADX;AAEC,IAAA,OAAO,EAAC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAKC;AACC,IAAA,SAAS,EAAC,YADX;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,IAAI,EAAC,OAHN;AAIC,IAAA,WAAW,EAAC,OAJb;AAKC,IAAA,EAAE,EAAC,WALJ;AAMC,IAAA,KAAK,EAAEK,KANR;AAOC,IAAA,QAAQ,EAAGE,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACE,MAAF,CAASC,KAAV,CAP7B;AAQC,IAAA,SAAS,EAAC,IARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAPD,EAuBC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAC,YADX;AAEC,IAAA,OAAO,EAAC,iBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAKC;AACC,IAAA,SAAS,EAAC,YADX;AAEC,IAAA,IAAI,EAAC,aAFN;AAGC,IAAA,EAAE,EAAC,iBAHJ;AAIC,IAAA,WAAW,EAAC,aAJb;AAKC,IAAA,IAAI,EAAC,IALN;AAMC,IAAA,IAAI,EAAC,IANN;AAOC,IAAA,KAAK,EAAEJ,WAPR;AAQC,IAAA,QAAQ,EAAGC,CAAD,IAAON,iBAAiB,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CARnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAvBD,EAuCC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCD,CADD,CADD;AA6CA,CA9CD;;AAgDAN,IAAI,CAACO,SAAL,GAAiB;AAChBX,EAAAA,OAAO,EAAEF,SAAS,CAACc,IAAV,CAAeC;AADR,CAAjB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACnCV,EAAAA,KAAK,EAAEU,KAAK,CAACC,SAAN,CAAgBX,KADY;AAEnCC,EAAAA,WAAW,EAAES,KAAK,CAACC,SAAN,CAAgBV;AAFM,CAAZ,CAAxB;;AAKA,MAAMW,kBAAkB,GAAG;AAC1BjB,EAAAA,OAD0B;AAE1BC,EAAAA,iBAF0B;AAG1BC,EAAAA;AAH0B,CAA3B;AAMA,eAAeH,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../action/addTodo';\nimport { changeDescription } from '../action/changeDescription';\nimport { changeTitle } from '../action/changeTitle';\n\n\nimport ButtonForm from '../components/ButtonForm';\nimport '../style/Form.style.scss';\n\nconst Form = ({ addTodo, title, description, changeTitle, changeDescription }) => {\n\treturn (\n\t\t<div className='Form'>\n\t\t\t<form\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (!title || !description) return;\n\t\t\t\t\taddTodo();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className='Form-group'>\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName='Form-label'\n\t\t\t\t\t\thtmlFor='todoTitle'\n\t\t\t\t\t>Title:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='Form-input'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tplaceholder='Title'\n\t\t\t\t\t\tid='todoTitle'\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={(e) => changeTitle(e.target.value)}\n\t\t\t\t\t\tmaxLength='30'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='Form-group'>\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName='Form-label'\n\t\t\t\t\t\thtmlFor='todoDescription'\n\t\t\t\t\t>Description:</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='Form-input'\n\t\t\t\t\t\tname='description'\n\t\t\t\t\t\tid='todoDescription'\n\t\t\t\t\t\tplaceholder='Description'\n\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\trows='10'\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\tonChange={(e) => changeDescription(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ButtonForm type='submit' name='ADD TODO'/>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nForm.propTypes = {\n\taddTodo: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n\ttitle: store.todoItems.title,\n\tdescription: store.todoItems.description,\n});\n\nconst mapDispatchToProps = {\n\taddTodo,\n\tchangeDescription,\n\tchangeTitle,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}